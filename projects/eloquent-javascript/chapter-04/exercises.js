////////////////////////////////////////////////////////////////////////////////
// range ///////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function range(startNum, endNum, step) {
   var arrayOfNums = [];
  if(step === undefined){
    step = 1;
  } if (startNum < endNum) {
    for (var i = startNum; i <= endNum; i += step) { 
      arrayOfNums.push(i);
    }
    return arrayOfNums;
  } else if (startNum > endNum && step > 0) {// different condition needed for larger startNum
    for (i = startNum; i >= endNum; i -= step) { // decrement if user didn't input negative number for downward step
      arrayOfNums.push(i);
    }
    return arrayOfNums;
  } else if (startNum > endNum && step < 0) { // different condition needed for larger startNum
    for (i = startNum; i >= endNum; i += step) {
      arrayOfNums.push(i);
    }
    return arrayOfNums;
  }
}

////////////////////////////////////////////////////////////////////////////////
// sum /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

// function sum(arrayofNums) {
//   var total = 0;
//   for (var i = 0; i < arrayOfNums.length; i++) {
//     total += arrayOfNums[i];
//     // console.log(total);
//   }
//   return total;
// }

////////////////////////////////////////////////////////////////////////////////
// reverseArray ////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function reverseArray(array) {
  newArray = [];
  for (var i = array.length - 1; i > 0; i--){
    newArray.push(array[i]);
  }
  return newArray;
}

////////////////////////////////////////////////////////////////////////////////
// reverseArrayInPlace /////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function reverseArrayInPlace(array) {
  return array.reverse();
}

////////////////////////////////////////////////////////////////////////////////
// arrayToList /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function arrayToList() {

}

////////////////////////////////////////////////////////////////////////////////
// listToArray /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function listToArray() {

}

////////////////////////////////////////////////////////////////////////////////
// prepend /////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function prepend() {

}

////////////////////////////////////////////////////////////////////////////////
// nth /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function nth() {

}

////////////////////////////////////////////////////////////////////////////////
// deepEqual ///////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function deepEqual() {

}

////////////////////////////////////////////////////////////////////////////////
// DON'T REMOVE THIS CODE //////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    range,
    sum,
    reverseArray,
    reverseArrayInPlace,
    arrayToList,
    listToArray,
    prepend,
    nth,
    deepEqual,
  };
};
