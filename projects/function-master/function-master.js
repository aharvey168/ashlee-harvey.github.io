//////////////////////////////////////////////////////////////////////
// Function 1 - Object Values ////////////////////////////////////////
//////////////////////////////////////////////////////////////////////



function objectValues(object) {
     return Object.values(object);
} 

//////////////////////////////////////////////////////////////////////
// Function 2 - Keys to String ///////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function keysToString(object) {
      var array = Object.keys(object);
      return array.join(" ");
}

//////////////////////////////////////////////////////////////////////
// Function 3 - Values to String /////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function valuesToString(object) {
    var joinArray = [];
    var array = Object.values(object);
        //loop through values of the object
        for(var i = 0; i < array.length; i++) {
            //if the typeof value ==== string
            if (typeof array[i] === "string") {
                joinArray.push(array[i]);
            }
        }
        //return string values in a string spearated with a space
            return joinArray.join(" ");
    }
    
//////////////////////////////////////////////////////////////////////
// Function 4 - Array or Object //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function arrayOrObject(collection) {
    //return 'array' if its an array
    if (Array.isArray(collection))  {
        return "array";   
    //return 'object' if its an object
    } else {
        return "object";
    }
}

//////////////////////////////////////////////////////////////////////
// Function 5 - Capitalize Word //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function capitalizeWord(string) {
     return string[0].toUpperCase() + string.slice(1);
}
    


//////////////////////////////////////////////////////////////////////
// Function 6 - Capitalize All Words /////////////////////////////////
//////////////////////////////////////////////////////////////////////

function capitalizeAllWords(string) {
   var words = string.split(" ");

   for(var i = 0; i < words.length; i++) {
       words[i] = words[i][0].toUpperCase() + words[i].slice(1);
   }
   return words.join(" ");
}

//////////////////////////////////////////////////////////////////////
// Function 7 - Welcome Message //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function welcomeMessage(object) {
   //Should take an object with a name property and return 'Welcome <Name>!'
    if (object.hasOwnProperty("name")) {
        return "Welcome"  + " " + object["name"][0].toUpperCase() + object["name"].slice(1) + "!";
    }                               
}

//////////////////////////////////////////////////////////////////////
// Function 8 - Profile Info /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

// function profileInfo(object) {
// //capitalize the first letter of the value of the name property
//  let capitalName = object["name"][0].toUpperCase();
// //capitalize the first name of the vale at the species
//   let capitalSpecies = object["species"][0].toUpperCase();
//  return capitalName + "is a" + capitalSpecies;
 
// }
 function profileInfo(object) {
//capitalize the first letter of the value of the name property
 let capitalName = object["name"][0].toUpperCase() + object["name"].slice(1);
//capitalize the first name of the vale at the species
  let capitalSpecies = object["species"][0].toUpperCase() + object["species"].slice(1);
 return capitalName + " " + "is a" + " " + capitalSpecies;
 
}; 


//////////////////////////////////////////////////////////////////////
// Function 9 - Maybe Noises /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function maybeNoises(object) {
    noiseArray =[];
    for(let key in object) {
        if(object.hasOwnProperty("noises")) {
            return object["noises"].join(" ");
        } else {
              return "there are no noises";
        }
    }
}


//////////////////////////////////////////////////////////////////////
// Function 10 - Has Words ///////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function hasWord(string, word) {
for (i = 0; i <  string.length; i++){ 
    if (string.includes(word)) {
        return true;
    } else {
        return false;
    }
}
};

//////////////////////////////////////////////////////////////////////
// Function 11 - Add Friend //////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function addFriend (name, object) {
    if (object.hasOwnProperty("friends")) {
        object.friends.push(name);
    }
    return object;
}

//////////////////////////////////////////////////////////////////////
// Function 12 - Is Friend ///////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function isFriend(name, object) {
var theFriend = false;
var allFriends = Object.values(object);
for (var i =0; i < allFriends.length; i++) {
    if (allFriends[i] === name) {
        theFriend = true;
        }
    } 
        return theFriend;
    }


//////////////////////////////////////////////////////////////////////
// Function 13 - Non-Friends /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function nonFriends(name, array) {

}

//////////////////////////////////////////////////////////////////////
// Function 14 - Update Object ///////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function updateObject(object, key, value) {

}

//////////////////////////////////////////////////////////////////////
// Function 15 - Remove Properties ///////////////////////////////////
//////////////////////////////////////////////////////////////////////

function removeProperties(object, array) {

}

//////////////////////////////////////////////////////////////////////
// Function 16 - Dedup ///////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function dedup(array) {

}

//////////////////////////////////////////////////////////////////////
// DON'T REMOVE THIS CODE ////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

if((typeof process !== 'undefined') &&
   (typeof process.versions.node !== 'undefined')) {
    // here, export any references you need for tests //
    module.exports.objectValues = objectValues;
    module.exports.keysToString = keysToString;
    module.exports.valuesToString = valuesToString;
    module.exports.arrayOrObject = arrayOrObject;
    module.exports.capitalizeWord = capitalizeWord;
    module.exports.capitalizeAllWords = capitalizeAllWords;
    module.exports.welcomeMessage = welcomeMessage;
    module.exports.profileInfo = profileInfo;
    module.exports.maybeNoises = maybeNoises;
    module.exports.hasWord = hasWord;
    module.exports.addFriend = addFriend;
    module.exports.isFriend = isFriend;
    module.exports.nonFriends = nonFriends;
    module.exports.updateObject = updateObject;
    module.exports.removeProperties = removeProperties;
    module.exports.dedup = dedup;
}